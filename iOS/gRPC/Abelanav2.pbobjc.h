/*
 * Copyright 2015 Google Inc. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: abelanav2.proto

#import "GPBProtocolBuffers.h"

#if GOOGLE_PROTOBUF_OBJC_GEN_VERSION != 30000
#error This file was generated by a different version of protoc-gen-objc which is incompatible with your Protocol Buffer sources.
#endif

// @@protoc_insertion_point(imports)

CF_EXTERN_C_BEGIN

@class AGRPCError;

#pragma mark - Enum AGRPCVoteRequest_VoteType

typedef GPB_ENUM(AGRPCVoteRequest_VoteType) {
  AGRPCVoteRequest_VoteType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  AGRPCVoteRequest_VoteType_Unknown = 0,
  AGRPCVoteRequest_VoteType_ThumbsUp = 1,
  AGRPCVoteRequest_VoteType_Neutral = 2,
  AGRPCVoteRequest_VoteType_ThumbsDown = 3,
};

GPBEnumDescriptor *AGRPCVoteRequest_VoteType_EnumDescriptor(void);

BOOL AGRPCVoteRequest_VoteType_IsValidValue(int32_t value);


#pragma mark - AGRPCAbelanav2Root

@interface AGRPCAbelanav2Root : GPBRootObject

// The base class provides:
//   + (GPBExtensionRegistry *)extensionRegistry;
// which is an GPBExtensionRegistry that includes all the extensions defined by
// this file and all files that it depends on.

@end

#pragma mark - AGRPCStatusResponse

typedef GPB_ENUM(AGRPCStatusResponse_FieldNumber) {
  AGRPCStatusResponse_FieldNumber_Error = 1,
};

// Generic message sent when there is nothing else to send back
@interface AGRPCStatusResponse : GPBMessage

@property(nonatomic, readwrite) BOOL hasError;
@property(nonatomic, readwrite, strong) AGRPCError *error;

@end

#pragma mark - AGRPCError

typedef GPB_ENUM(AGRPCError_FieldNumber) {
  AGRPCError_FieldNumber_Code = 1,
  AGRPCError_FieldNumber_Details = 2,
};

@interface AGRPCError : GPBMessage

@property(nonatomic, readwrite, copy) NSString *code;

@property(nonatomic, readwrite, copy) NSString *details;

@end

#pragma mark - AGRPCSignInRequest

typedef GPB_ENUM(AGRPCSignInRequest_FieldNumber) {
  AGRPCSignInRequest_FieldNumber_GitkitToken = 1,
};

// The request message containing the gitkit token.
@interface AGRPCSignInRequest : GPBMessage

@property(nonatomic, readwrite, copy) NSString *gitkitToken;

@end

#pragma mark - AGRPCSignInResponse

typedef GPB_ENUM(AGRPCSignInResponse_FieldNumber) {
  AGRPCSignInResponse_FieldNumber_Error = 1,
  AGRPCSignInResponse_FieldNumber_UserToken = 2,
};

// The response message containing the token generated by the server to
// identify the user
@interface AGRPCSignInResponse : GPBMessage

@property(nonatomic, readwrite) BOOL hasError;
@property(nonatomic, readwrite, strong) AGRPCError *error;

@property(nonatomic, readwrite, copy) NSString *userToken;

@end

#pragma mark - AGRPCPhoto

typedef GPB_ENUM(AGRPCPhoto_FieldNumber) {
  AGRPCPhoto_FieldNumber_PhotoId = 1,
  AGRPCPhoto_FieldNumber_UserId = 2,
  AGRPCPhoto_FieldNumber_Date = 3,
  AGRPCPhoto_FieldNumber_Description_p = 4,
  AGRPCPhoto_FieldNumber_Rating = 5,
  AGRPCPhoto_FieldNumber_URL = 6,
};

// Describes a photo and its attributes
@interface AGRPCPhoto : GPBMessage

@property(nonatomic, readwrite) int64_t photoId;

@property(nonatomic, readwrite, copy) NSString *userId;

@property(nonatomic, readwrite) int64_t date;

@property(nonatomic, readwrite, copy) NSString *description_p;

@property(nonatomic, readwrite) int64_t rating;

@property(nonatomic, readwrite, copy) NSString *uRL;

@end

#pragma mark - AGRPCPhotoListRequest

typedef GPB_ENUM(AGRPCPhotoListRequest_FieldNumber) {
  AGRPCPhotoListRequest_FieldNumber_PageNumber = 1,
};

// The request message to get a list of Photo
@interface AGRPCPhotoListRequest : GPBMessage

@property(nonatomic, readwrite) int64_t pageNumber;

@end

#pragma mark - AGRPCPhotoListResponse

typedef GPB_ENUM(AGRPCPhotoListResponse_FieldNumber) {
  AGRPCPhotoListResponse_FieldNumber_Error = 1,
  AGRPCPhotoListResponse_FieldNumber_PhotoArray = 2,
  AGRPCPhotoListResponse_FieldNumber_NextPage = 3,
};

// The response message containing a list of Photo
@interface AGRPCPhotoListResponse : GPBMessage

@property(nonatomic, readwrite) BOOL hasError;
@property(nonatomic, readwrite, strong) AGRPCError *error;

// |photoArray| contains |AGRPCPhoto|
@property(nonatomic, readwrite, strong) NSMutableArray *photoArray;

@property(nonatomic, readwrite) int64_t nextPage;

@end

#pragma mark - AGRPCNewPhotoRequest

typedef GPB_ENUM(AGRPCNewPhotoRequest_FieldNumber) {
  AGRPCNewPhotoRequest_FieldNumber_Description_p = 1,
};

// The request message describing a new photo
@interface AGRPCNewPhotoRequest : GPBMessage

@property(nonatomic, readwrite, copy) NSString *description_p;

@end

#pragma mark - AGRPCEditPhotoRequest

typedef GPB_ENUM(AGRPCEditPhotoRequest_FieldNumber) {
  AGRPCEditPhotoRequest_FieldNumber_PhotoId = 1,
  AGRPCEditPhotoRequest_FieldNumber_Description_p = 2,
};

// The request message describing an edited photo
@interface AGRPCEditPhotoRequest : GPBMessage

@property(nonatomic, readwrite) int64_t photoId;

@property(nonatomic, readwrite, copy) NSString *description_p;

@end

#pragma mark - AGRPCDeletePhotoRequest

typedef GPB_ENUM(AGRPCDeletePhotoRequest_FieldNumber) {
  AGRPCDeletePhotoRequest_FieldNumber_PhotoId = 1,
};

@interface AGRPCDeletePhotoRequest : GPBMessage

@property(nonatomic, readwrite) int64_t photoId;

@end

#pragma mark - AGRPCFlagRequest

typedef GPB_ENUM(AGRPCFlagRequest_FieldNumber) {
  AGRPCFlagRequest_FieldNumber_PhotoId = 1,
};

@interface AGRPCFlagRequest : GPBMessage

@property(nonatomic, readwrite) int64_t photoId;

@end

#pragma mark - AGRPCVoteRequest

typedef GPB_ENUM(AGRPCVoteRequest_FieldNumber) {
  AGRPCVoteRequest_FieldNumber_PhotoId = 1,
  AGRPCVoteRequest_FieldNumber_Vote = 2,
};

@interface AGRPCVoteRequest : GPBMessage

@property(nonatomic, readwrite) int64_t photoId;

@property(nonatomic, readwrite) AGRPCVoteRequest_VoteType vote;

@end

int32_t AGRPCVoteRequest_Vote_RawValue(AGRPCVoteRequest *message);
void SetAGRPCVoteRequest_Vote_RawValue(AGRPCVoteRequest *message, int32_t value);

#pragma mark - AGRPCUploadPhotoResponse

typedef GPB_ENUM(AGRPCUploadPhotoResponse_FieldNumber) {
  AGRPCUploadPhotoResponse_FieldNumber_Error = 1,
  AGRPCUploadPhotoResponse_FieldNumber_PhotoId = 2,
  AGRPCUploadPhotoResponse_FieldNumber_UserId = 3,
  AGRPCUploadPhotoResponse_FieldNumber_UploadURL = 4,
};

// The response message containing the id of a photo to upload
// The client will use this id to store the picture on GCS.
@interface AGRPCUploadPhotoResponse : GPBMessage

@property(nonatomic, readwrite) BOOL hasError;
@property(nonatomic, readwrite, strong) AGRPCError *error;

@property(nonatomic, readwrite) int64_t photoId;

@property(nonatomic, readwrite, copy) NSString *userId;

@property(nonatomic, readwrite, copy) NSString *uploadURL;

@end

CF_EXTERN_C_END

// @@protoc_insertion_point(global_scope)
