/*
 * Copyright 2015 Google Inc. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!

package com.examples.abelanav2.grpc;

@SuppressWarnings("hiding")
public final class UploadPhotoResponse extends
    com.google.protobuf.nano.MessageNano {

  private static volatile UploadPhotoResponse[] _emptyArray;
  public static UploadPhotoResponse[] emptyArray() {
    // Lazily initializes the empty array
    if (_emptyArray == null) {
      synchronized (
          com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
        if (_emptyArray == null) {
          _emptyArray = new UploadPhotoResponse[0];
        }
      }
    }
    return _emptyArray;
  }

  // optional .abelanav2.grpc.Error error = 1;
  public com.examples.abelanav2.grpc.Error error;

  // optional int64 photo_id = 2;
  public long photoId;

  // optional string user_id = 3;
  public java.lang.String userId;

  // optional string upload_url = 4;
  public java.lang.String uploadUrl;

  public UploadPhotoResponse() {
    clear();
  }

  public UploadPhotoResponse clear() {
    error = null;
    photoId = 0L;
    userId = "";
    uploadUrl = "";
    cachedSize = -1;
    return this;
  }

  @Override
  public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
      throws java.io.IOException {
    if (this.error != null) {
      output.writeMessage(1, this.error);
    }
    if (this.photoId != 0L) {
      output.writeInt64(2, this.photoId);
    }
    if (!this.userId.equals("")) {
      output.writeString(3, this.userId);
    }
    if (!this.uploadUrl.equals("")) {
      output.writeString(4, this.uploadUrl);
    }
    super.writeTo(output);
  }

  @Override
  protected int computeSerializedSize() {
    int size = super.computeSerializedSize();
    if (this.error != null) {
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
        .computeMessageSize(1, this.error);
    }
    if (this.photoId != 0L) {
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt64Size(2, this.photoId);
    }
    if (!this.userId.equals("")) {
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(3, this.userId);
    }
    if (!this.uploadUrl.equals("")) {
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(4, this.uploadUrl);
    }
    return size;
  }

  @Override
  public UploadPhotoResponse mergeFrom(
          com.google.protobuf.nano.CodedInputByteBufferNano input)
      throws java.io.IOException {
    while (true) {
      int tag = input.readTag();
      switch (tag) {
        case 0:
          return this;
        default: {
          if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
            return this;
          }
          break;
        }
        case 10: {
          if (this.error == null) {
            this.error = new com.examples.abelanav2.grpc.Error();
          }
          input.readMessage(this.error);
          break;
        }
        case 16: {
          this.photoId = input.readInt64();
          break;
        }
        case 26: {
          this.userId = input.readString();
          break;
        }
        case 34: {
          this.uploadUrl = input.readString();
          break;
        }
      }
    }
  }

  public static UploadPhotoResponse parseFrom(byte[] data)
      throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
    return com.google.protobuf.nano.MessageNano.mergeFrom(new UploadPhotoResponse(), data);
  }

  public static UploadPhotoResponse parseFrom(
          com.google.protobuf.nano.CodedInputByteBufferNano input)
      throws java.io.IOException {
    return new UploadPhotoResponse().mergeFrom(input);
  }
}
